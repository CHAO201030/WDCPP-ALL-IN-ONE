// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ServiceInfo.proto
// Protobuf C++ Version: 6.31.0

#include "./include/ServiceInfo.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ServiceInfo {

inline constexpr SetServiceInfoResp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{static_cast< ::ServiceInfo::Status >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR SetServiceInfoResp::SetServiceInfoResp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SetServiceInfoResp_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetServiceInfoRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetServiceInfoRespDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetServiceInfoRespDefaultTypeInternal() {}
  union {
    SetServiceInfoResp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetServiceInfoRespDefaultTypeInternal _SetServiceInfoResp_default_instance_;

inline constexpr MicroServiceInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        service_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        port_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{static_cast< ::ServiceInfo::Status >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR MicroServiceInfo::MicroServiceInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MicroServiceInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MicroServiceInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MicroServiceInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MicroServiceInfoDefaultTypeInternal() {}
  union {
    MicroServiceInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MicroServiceInfoDefaultTypeInternal _MicroServiceInfo_default_instance_;

inline constexpr GetServiceInfoReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        service_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GetServiceInfoReq::GetServiceInfoReq(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetServiceInfoReq_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetServiceInfoReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetServiceInfoReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetServiceInfoReqDefaultTypeInternal() {}
  union {
    GetServiceInfoReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetServiceInfoReqDefaultTypeInternal _GetServiceInfoReq_default_instance_;

inline constexpr SetServiceInfoReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        service_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetServiceInfoReq::SetServiceInfoReq(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SetServiceInfoReq_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetServiceInfoReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetServiceInfoReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetServiceInfoReqDefaultTypeInternal() {}
  union {
    SetServiceInfoReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetServiceInfoReqDefaultTypeInternal _SetServiceInfoReq_default_instance_;

inline constexpr GetServiceInfoResp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        service_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetServiceInfoResp::GetServiceInfoResp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetServiceInfoResp_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetServiceInfoRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetServiceInfoRespDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetServiceInfoRespDefaultTypeInternal() {}
  union {
    GetServiceInfoResp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetServiceInfoRespDefaultTypeInternal _GetServiceInfoResp_default_instance_;
}  // namespace ServiceInfo
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_ServiceInfo_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_ServiceInfo_2eproto = nullptr;
const ::uint32_t
    TableStruct_ServiceInfo_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ServiceInfo::MicroServiceInfo, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ServiceInfo::MicroServiceInfo, _impl_.service_name_),
        PROTOBUF_FIELD_OFFSET(::ServiceInfo::MicroServiceInfo, _impl_.ip_),
        PROTOBUF_FIELD_OFFSET(::ServiceInfo::MicroServiceInfo, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::ServiceInfo::MicroServiceInfo, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::ServiceInfo::MicroServiceInfo, _impl_.status_),
        0,
        1,
        2,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ServiceInfo::GetServiceInfoReq, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ServiceInfo::GetServiceInfoReq, _impl_.service_name_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ServiceInfo::GetServiceInfoResp, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ServiceInfo::GetServiceInfoResp, _impl_.service_info_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ServiceInfo::SetServiceInfoReq, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ServiceInfo::SetServiceInfoReq, _impl_.service_info_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ServiceInfo::SetServiceInfoResp, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ServiceInfo::SetServiceInfoResp, _impl_.status_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::ServiceInfo::MicroServiceInfo)},
        {13, sizeof(::ServiceInfo::GetServiceInfoReq)},
        {18, sizeof(::ServiceInfo::GetServiceInfoResp)},
        {23, sizeof(::ServiceInfo::SetServiceInfoReq)},
        {28, sizeof(::ServiceInfo::SetServiceInfoResp)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::ServiceInfo::_MicroServiceInfo_default_instance_._instance,
    &::ServiceInfo::_GetServiceInfoReq_default_instance_._instance,
    &::ServiceInfo::_GetServiceInfoResp_default_instance_._instance,
    &::ServiceInfo::_SetServiceInfoReq_default_instance_._instance,
    &::ServiceInfo::_SetServiceInfoResp_default_instance_._instance,
};
const char descriptor_table_protodef_ServiceInfo_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021ServiceInfo.proto\022\013ServiceInfo\"x\n\020Micr"
    "oServiceInfo\022\024\n\014service_name\030\001 \001(\t\022\n\n\002ip"
    "\030\002 \001(\t\022\014\n\004port\030\003 \001(\t\022\017\n\007version\030\004 \001(\t\022#\n"
    "\006status\030\005 \001(\0162\023.ServiceInfo.Status\")\n\021Ge"
    "tServiceInfoReq\022\024\n\014service_name\030\001 \001(\t\"I\n"
    "\022GetServiceInfoResp\0223\n\014service_info\030\001 \001("
    "\0132\035.ServiceInfo.MicroServiceInfo\"H\n\021SetS"
    "erviceInfoReq\0223\n\014service_info\030\001 \001(\0132\035.Se"
    "rviceInfo.MicroServiceInfo\"9\n\022SetService"
    "InfoResp\022#\n\006status\030\001 \001(\0162\023.ServiceInfo.S"
    "tatus*,\n\006Status\022\017\n\013UNSPECIFIED\020\000\022\006\n\002OK\020\001"
    "\022\t\n\005FALSE\020\0022\273\001\n\017ServiceRegistry\022S\n\016getSe"
    "rviceInfo\022\036.ServiceInfo.GetServiceInfoRe"
    "q\032\037.ServiceInfo.GetServiceInfoResp\"\000\022S\n\016"
    "setServiceInfo\022\036.ServiceInfo.SetServiceI"
    "nfoReq\032\037.ServiceInfo.SetServiceInfoResp\""
    "\000b\006proto3"
};
static ::absl::once_flag descriptor_table_ServiceInfo_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ServiceInfo_2eproto = {
    false,
    false,
    649,
    descriptor_table_protodef_ServiceInfo_2eproto,
    "ServiceInfo.proto",
    &descriptor_table_ServiceInfo_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_ServiceInfo_2eproto::offsets,
    file_level_enum_descriptors_ServiceInfo_2eproto,
    file_level_service_descriptors_ServiceInfo_2eproto,
};
namespace ServiceInfo {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Status_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ServiceInfo_2eproto);
  return file_level_enum_descriptors_ServiceInfo_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Status_internal_data_[] = {
    196608u, 0u, };
// ===================================================================

class MicroServiceInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MicroServiceInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MicroServiceInfo, _impl_._has_bits_);
};

MicroServiceInfo::MicroServiceInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MicroServiceInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ServiceInfo.MicroServiceInfo)
}
PROTOBUF_NDEBUG_INLINE MicroServiceInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::ServiceInfo::MicroServiceInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        service_name_(arena, from.service_name_),
        ip_(arena, from.ip_),
        port_(arena, from.port_),
        version_(arena, from.version_) {}

MicroServiceInfo::MicroServiceInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MicroServiceInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MicroServiceInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MicroServiceInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.status_ = from._impl_.status_;

  // @@protoc_insertion_point(copy_constructor:ServiceInfo.MicroServiceInfo)
}
PROTOBUF_NDEBUG_INLINE MicroServiceInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        service_name_(arena),
        ip_(arena),
        port_(arena),
        version_(arena) {}

inline void MicroServiceInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
MicroServiceInfo::~MicroServiceInfo() {
  // @@protoc_insertion_point(destructor:ServiceInfo.MicroServiceInfo)
  SharedDtor(*this);
}
inline void MicroServiceInfo::SharedDtor(MessageLite& self) {
  MicroServiceInfo& this_ = static_cast<MicroServiceInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.service_name_.Destroy();
  this_._impl_.ip_.Destroy();
  this_._impl_.port_.Destroy();
  this_._impl_.version_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MicroServiceInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MicroServiceInfo(arena);
}
constexpr auto MicroServiceInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MicroServiceInfo),
                                            alignof(MicroServiceInfo));
}
constexpr auto MicroServiceInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MicroServiceInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MicroServiceInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MicroServiceInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MicroServiceInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MicroServiceInfo>(), &MicroServiceInfo::ByteSizeLong,
              &MicroServiceInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MicroServiceInfo, _impl_._cached_size_),
          false,
      },
      &MicroServiceInfo::kDescriptorMethods,
      &descriptor_table_ServiceInfo_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MicroServiceInfo_class_data_ =
        MicroServiceInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MicroServiceInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MicroServiceInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MicroServiceInfo_class_data_.tc_table);
  return MicroServiceInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 62, 2>
MicroServiceInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MicroServiceInfo, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    MicroServiceInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ServiceInfo::MicroServiceInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string service_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MicroServiceInfo, _impl_.service_name_)}},
    // string ip = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(MicroServiceInfo, _impl_.ip_)}},
    // string port = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(MicroServiceInfo, _impl_.port_)}},
    // string version = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(MicroServiceInfo, _impl_.version_)}},
    // .ServiceInfo.Status status = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MicroServiceInfo, _impl_.status_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(MicroServiceInfo, _impl_.status_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string service_name = 1;
    {PROTOBUF_FIELD_OFFSET(MicroServiceInfo, _impl_.service_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ip = 2;
    {PROTOBUF_FIELD_OFFSET(MicroServiceInfo, _impl_.ip_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string port = 3;
    {PROTOBUF_FIELD_OFFSET(MicroServiceInfo, _impl_.port_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string version = 4;
    {PROTOBUF_FIELD_OFFSET(MicroServiceInfo, _impl_.version_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .ServiceInfo.Status status = 5;
    {PROTOBUF_FIELD_OFFSET(MicroServiceInfo, _impl_.status_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\34\14\2\4\7\0\0\0"
    "ServiceInfo.MicroServiceInfo"
    "service_name"
    "ip"
    "port"
    "version"
  }},
};
PROTOBUF_NOINLINE void MicroServiceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ServiceInfo.MicroServiceInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.service_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.ip_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.port_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.version_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MicroServiceInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MicroServiceInfo& this_ = static_cast<const MicroServiceInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MicroServiceInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MicroServiceInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:ServiceInfo.MicroServiceInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string service_name = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_service_name().empty()) {
      const ::std::string& _s = this_._internal_service_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ServiceInfo.MicroServiceInfo.service_name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string ip = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_ip().empty()) {
      const ::std::string& _s = this_._internal_ip();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ServiceInfo.MicroServiceInfo.ip");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string port = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_port().empty()) {
      const ::std::string& _s = this_._internal_port();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ServiceInfo.MicroServiceInfo.port");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string version = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._internal_version().empty()) {
      const ::std::string& _s = this_._internal_version();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ServiceInfo.MicroServiceInfo.version");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // .ServiceInfo.Status status = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_status(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServiceInfo.MicroServiceInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MicroServiceInfo::ByteSizeLong(const MessageLite& base) {
  const MicroServiceInfo& this_ = static_cast<const MicroServiceInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MicroServiceInfo::ByteSizeLong() const {
  const MicroServiceInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ServiceInfo.MicroServiceInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // string service_name = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_service_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_service_name());
      }
    }
    // string ip = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_ip().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_ip());
      }
    }
    // string port = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_port().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_port());
      }
    }
    // string version = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_version().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_version());
      }
    }
    // .ServiceInfo.Status status = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MicroServiceInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MicroServiceInfo*>(&to_msg);
  auto& from = static_cast<const MicroServiceInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServiceInfo.MicroServiceInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_service_name().empty()) {
        _this->_internal_set_service_name(from._internal_service_name());
      } else {
        if (_this->_impl_.service_name_.IsDefault()) {
          _this->_internal_set_service_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_ip().empty()) {
        _this->_internal_set_ip(from._internal_ip());
      } else {
        if (_this->_impl_.ip_.IsDefault()) {
          _this->_internal_set_ip("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_port().empty()) {
        _this->_internal_set_port(from._internal_port());
      } else {
        if (_this->_impl_.port_.IsDefault()) {
          _this->_internal_set_port("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_version().empty()) {
        _this->_internal_set_version(from._internal_version());
      } else {
        if (_this->_impl_.version_.IsDefault()) {
          _this->_internal_set_version("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_status() != 0) {
        _this->_impl_.status_ = from._impl_.status_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MicroServiceInfo::CopyFrom(const MicroServiceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServiceInfo.MicroServiceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MicroServiceInfo::InternalSwap(MicroServiceInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.service_name_, &other->_impl_.service_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.port_, &other->_impl_.port_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata MicroServiceInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetServiceInfoReq::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetServiceInfoReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetServiceInfoReq, _impl_._has_bits_);
};

GetServiceInfoReq::GetServiceInfoReq(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetServiceInfoReq_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ServiceInfo.GetServiceInfoReq)
}
PROTOBUF_NDEBUG_INLINE GetServiceInfoReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::ServiceInfo::GetServiceInfoReq& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        service_name_(arena, from.service_name_) {}

GetServiceInfoReq::GetServiceInfoReq(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetServiceInfoReq& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetServiceInfoReq_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetServiceInfoReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ServiceInfo.GetServiceInfoReq)
}
PROTOBUF_NDEBUG_INLINE GetServiceInfoReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        service_name_(arena) {}

inline void GetServiceInfoReq::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetServiceInfoReq::~GetServiceInfoReq() {
  // @@protoc_insertion_point(destructor:ServiceInfo.GetServiceInfoReq)
  SharedDtor(*this);
}
inline void GetServiceInfoReq::SharedDtor(MessageLite& self) {
  GetServiceInfoReq& this_ = static_cast<GetServiceInfoReq&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.service_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetServiceInfoReq::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetServiceInfoReq(arena);
}
constexpr auto GetServiceInfoReq::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetServiceInfoReq),
                                            alignof(GetServiceInfoReq));
}
constexpr auto GetServiceInfoReq::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetServiceInfoReq_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetServiceInfoReq::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetServiceInfoReq>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetServiceInfoReq::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetServiceInfoReq>(), &GetServiceInfoReq::ByteSizeLong,
              &GetServiceInfoReq::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetServiceInfoReq, _impl_._cached_size_),
          false,
      },
      &GetServiceInfoReq::kDescriptorMethods,
      &descriptor_table_ServiceInfo_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetServiceInfoReq_class_data_ =
        GetServiceInfoReq::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetServiceInfoReq::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetServiceInfoReq_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetServiceInfoReq_class_data_.tc_table);
  return GetServiceInfoReq_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 50, 2>
GetServiceInfoReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetServiceInfoReq, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetServiceInfoReq_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ServiceInfo::GetServiceInfoReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string service_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetServiceInfoReq, _impl_.service_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string service_name = 1;
    {PROTOBUF_FIELD_OFFSET(GetServiceInfoReq, _impl_.service_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\14\0\0\0\0\0\0"
    "ServiceInfo.GetServiceInfoReq"
    "service_name"
  }},
};
PROTOBUF_NOINLINE void GetServiceInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ServiceInfo.GetServiceInfoReq)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.service_name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetServiceInfoReq::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetServiceInfoReq& this_ = static_cast<const GetServiceInfoReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetServiceInfoReq::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetServiceInfoReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:ServiceInfo.GetServiceInfoReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string service_name = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_service_name().empty()) {
      const ::std::string& _s = this_._internal_service_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ServiceInfo.GetServiceInfoReq.service_name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServiceInfo.GetServiceInfoReq)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetServiceInfoReq::ByteSizeLong(const MessageLite& base) {
  const GetServiceInfoReq& this_ = static_cast<const GetServiceInfoReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetServiceInfoReq::ByteSizeLong() const {
  const GetServiceInfoReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ServiceInfo.GetServiceInfoReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string service_name = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_service_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_service_name());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetServiceInfoReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetServiceInfoReq*>(&to_msg);
  auto& from = static_cast<const GetServiceInfoReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServiceInfo.GetServiceInfoReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_service_name().empty()) {
      _this->_internal_set_service_name(from._internal_service_name());
    } else {
      if (_this->_impl_.service_name_.IsDefault()) {
        _this->_internal_set_service_name("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetServiceInfoReq::CopyFrom(const GetServiceInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServiceInfo.GetServiceInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetServiceInfoReq::InternalSwap(GetServiceInfoReq* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.service_name_, &other->_impl_.service_name_, arena);
}

::google::protobuf::Metadata GetServiceInfoReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetServiceInfoResp::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetServiceInfoResp>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetServiceInfoResp, _impl_._has_bits_);
};

GetServiceInfoResp::GetServiceInfoResp(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetServiceInfoResp_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ServiceInfo.GetServiceInfoResp)
}
PROTOBUF_NDEBUG_INLINE GetServiceInfoResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::ServiceInfo::GetServiceInfoResp& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetServiceInfoResp::GetServiceInfoResp(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetServiceInfoResp& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetServiceInfoResp_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetServiceInfoResp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.service_info_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.service_info_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:ServiceInfo.GetServiceInfoResp)
}
PROTOBUF_NDEBUG_INLINE GetServiceInfoResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetServiceInfoResp::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.service_info_ = {};
}
GetServiceInfoResp::~GetServiceInfoResp() {
  // @@protoc_insertion_point(destructor:ServiceInfo.GetServiceInfoResp)
  SharedDtor(*this);
}
inline void GetServiceInfoResp::SharedDtor(MessageLite& self) {
  GetServiceInfoResp& this_ = static_cast<GetServiceInfoResp&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.service_info_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetServiceInfoResp::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetServiceInfoResp(arena);
}
constexpr auto GetServiceInfoResp::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetServiceInfoResp),
                                            alignof(GetServiceInfoResp));
}
constexpr auto GetServiceInfoResp::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetServiceInfoResp_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetServiceInfoResp::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetServiceInfoResp>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetServiceInfoResp::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetServiceInfoResp>(), &GetServiceInfoResp::ByteSizeLong,
              &GetServiceInfoResp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetServiceInfoResp, _impl_._cached_size_),
          false,
      },
      &GetServiceInfoResp::kDescriptorMethods,
      &descriptor_table_ServiceInfo_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetServiceInfoResp_class_data_ =
        GetServiceInfoResp::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetServiceInfoResp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetServiceInfoResp_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetServiceInfoResp_class_data_.tc_table);
  return GetServiceInfoResp_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
GetServiceInfoResp::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetServiceInfoResp, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetServiceInfoResp_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ServiceInfo::GetServiceInfoResp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .ServiceInfo.MicroServiceInfo service_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetServiceInfoResp, _impl_.service_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ServiceInfo.MicroServiceInfo service_info = 1;
    {PROTOBUF_FIELD_OFFSET(GetServiceInfoResp, _impl_.service_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::ServiceInfo::MicroServiceInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetServiceInfoResp::Clear() {
// @@protoc_insertion_point(message_clear_start:ServiceInfo.GetServiceInfoResp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.service_info_ != nullptr);
    _impl_.service_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetServiceInfoResp::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetServiceInfoResp& this_ = static_cast<const GetServiceInfoResp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetServiceInfoResp::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetServiceInfoResp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:ServiceInfo.GetServiceInfoResp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .ServiceInfo.MicroServiceInfo service_info = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.service_info_, this_._impl_.service_info_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServiceInfo.GetServiceInfoResp)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetServiceInfoResp::ByteSizeLong(const MessageLite& base) {
  const GetServiceInfoResp& this_ = static_cast<const GetServiceInfoResp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetServiceInfoResp::ByteSizeLong() const {
  const GetServiceInfoResp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ServiceInfo.GetServiceInfoResp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .ServiceInfo.MicroServiceInfo service_info = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.service_info_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetServiceInfoResp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetServiceInfoResp*>(&to_msg);
  auto& from = static_cast<const GetServiceInfoResp&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ServiceInfo.GetServiceInfoResp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.service_info_ != nullptr);
    if (_this->_impl_.service_info_ == nullptr) {
      _this->_impl_.service_info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.service_info_);
    } else {
      _this->_impl_.service_info_->MergeFrom(*from._impl_.service_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetServiceInfoResp::CopyFrom(const GetServiceInfoResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServiceInfo.GetServiceInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetServiceInfoResp::InternalSwap(GetServiceInfoResp* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.service_info_, other->_impl_.service_info_);
}

::google::protobuf::Metadata GetServiceInfoResp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetServiceInfoReq::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SetServiceInfoReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetServiceInfoReq, _impl_._has_bits_);
};

SetServiceInfoReq::SetServiceInfoReq(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SetServiceInfoReq_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ServiceInfo.SetServiceInfoReq)
}
PROTOBUF_NDEBUG_INLINE SetServiceInfoReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::ServiceInfo::SetServiceInfoReq& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetServiceInfoReq::SetServiceInfoReq(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SetServiceInfoReq& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SetServiceInfoReq_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetServiceInfoReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.service_info_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.service_info_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:ServiceInfo.SetServiceInfoReq)
}
PROTOBUF_NDEBUG_INLINE SetServiceInfoReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SetServiceInfoReq::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.service_info_ = {};
}
SetServiceInfoReq::~SetServiceInfoReq() {
  // @@protoc_insertion_point(destructor:ServiceInfo.SetServiceInfoReq)
  SharedDtor(*this);
}
inline void SetServiceInfoReq::SharedDtor(MessageLite& self) {
  SetServiceInfoReq& this_ = static_cast<SetServiceInfoReq&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.service_info_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SetServiceInfoReq::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SetServiceInfoReq(arena);
}
constexpr auto SetServiceInfoReq::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetServiceInfoReq),
                                            alignof(SetServiceInfoReq));
}
constexpr auto SetServiceInfoReq::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SetServiceInfoReq_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SetServiceInfoReq::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SetServiceInfoReq>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SetServiceInfoReq::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SetServiceInfoReq>(), &SetServiceInfoReq::ByteSizeLong,
              &SetServiceInfoReq::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SetServiceInfoReq, _impl_._cached_size_),
          false,
      },
      &SetServiceInfoReq::kDescriptorMethods,
      &descriptor_table_ServiceInfo_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SetServiceInfoReq_class_data_ =
        SetServiceInfoReq::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SetServiceInfoReq::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SetServiceInfoReq_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SetServiceInfoReq_class_data_.tc_table);
  return SetServiceInfoReq_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
SetServiceInfoReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetServiceInfoReq, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SetServiceInfoReq_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ServiceInfo::SetServiceInfoReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .ServiceInfo.MicroServiceInfo service_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetServiceInfoReq, _impl_.service_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ServiceInfo.MicroServiceInfo service_info = 1;
    {PROTOBUF_FIELD_OFFSET(SetServiceInfoReq, _impl_.service_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::ServiceInfo::MicroServiceInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SetServiceInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ServiceInfo.SetServiceInfoReq)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.service_info_ != nullptr);
    _impl_.service_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SetServiceInfoReq::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SetServiceInfoReq& this_ = static_cast<const SetServiceInfoReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SetServiceInfoReq::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SetServiceInfoReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:ServiceInfo.SetServiceInfoReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .ServiceInfo.MicroServiceInfo service_info = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.service_info_, this_._impl_.service_info_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServiceInfo.SetServiceInfoReq)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SetServiceInfoReq::ByteSizeLong(const MessageLite& base) {
  const SetServiceInfoReq& this_ = static_cast<const SetServiceInfoReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SetServiceInfoReq::ByteSizeLong() const {
  const SetServiceInfoReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ServiceInfo.SetServiceInfoReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .ServiceInfo.MicroServiceInfo service_info = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.service_info_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SetServiceInfoReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetServiceInfoReq*>(&to_msg);
  auto& from = static_cast<const SetServiceInfoReq&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ServiceInfo.SetServiceInfoReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.service_info_ != nullptr);
    if (_this->_impl_.service_info_ == nullptr) {
      _this->_impl_.service_info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.service_info_);
    } else {
      _this->_impl_.service_info_->MergeFrom(*from._impl_.service_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetServiceInfoReq::CopyFrom(const SetServiceInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServiceInfo.SetServiceInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetServiceInfoReq::InternalSwap(SetServiceInfoReq* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.service_info_, other->_impl_.service_info_);
}

::google::protobuf::Metadata SetServiceInfoReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetServiceInfoResp::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SetServiceInfoResp>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SetServiceInfoResp, _impl_._has_bits_);
};

SetServiceInfoResp::SetServiceInfoResp(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SetServiceInfoResp_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ServiceInfo.SetServiceInfoResp)
}
SetServiceInfoResp::SetServiceInfoResp(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SetServiceInfoResp& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SetServiceInfoResp_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE SetServiceInfoResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SetServiceInfoResp::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
SetServiceInfoResp::~SetServiceInfoResp() {
  // @@protoc_insertion_point(destructor:ServiceInfo.SetServiceInfoResp)
  SharedDtor(*this);
}
inline void SetServiceInfoResp::SharedDtor(MessageLite& self) {
  SetServiceInfoResp& this_ = static_cast<SetServiceInfoResp&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SetServiceInfoResp::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SetServiceInfoResp(arena);
}
constexpr auto SetServiceInfoResp::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetServiceInfoResp),
                                            alignof(SetServiceInfoResp));
}
constexpr auto SetServiceInfoResp::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SetServiceInfoResp_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SetServiceInfoResp::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SetServiceInfoResp>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SetServiceInfoResp::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SetServiceInfoResp>(), &SetServiceInfoResp::ByteSizeLong,
              &SetServiceInfoResp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SetServiceInfoResp, _impl_._cached_size_),
          false,
      },
      &SetServiceInfoResp::kDescriptorMethods,
      &descriptor_table_ServiceInfo_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SetServiceInfoResp_class_data_ =
        SetServiceInfoResp::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SetServiceInfoResp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SetServiceInfoResp_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SetServiceInfoResp_class_data_.tc_table);
  return SetServiceInfoResp_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
SetServiceInfoResp::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetServiceInfoResp, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SetServiceInfoResp_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ServiceInfo::SetServiceInfoResp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .ServiceInfo.Status status = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetServiceInfoResp, _impl_.status_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SetServiceInfoResp, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ServiceInfo.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(SetServiceInfoResp, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void SetServiceInfoResp::Clear() {
// @@protoc_insertion_point(message_clear_start:ServiceInfo.SetServiceInfoResp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SetServiceInfoResp::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SetServiceInfoResp& this_ = static_cast<const SetServiceInfoResp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SetServiceInfoResp::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SetServiceInfoResp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:ServiceInfo.SetServiceInfoResp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .ServiceInfo.Status status = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_status(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServiceInfo.SetServiceInfoResp)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SetServiceInfoResp::ByteSizeLong(const MessageLite& base) {
  const SetServiceInfoResp& this_ = static_cast<const SetServiceInfoResp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SetServiceInfoResp::ByteSizeLong() const {
  const SetServiceInfoResp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ServiceInfo.SetServiceInfoResp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .ServiceInfo.Status status = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SetServiceInfoResp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetServiceInfoResp*>(&to_msg);
  auto& from = static_cast<const SetServiceInfoResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServiceInfo.SetServiceInfoResp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_status() != 0) {
      _this->_impl_.status_ = from._impl_.status_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetServiceInfoResp::CopyFrom(const SetServiceInfoResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServiceInfo.SetServiceInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetServiceInfoResp::InternalSwap(SetServiceInfoResp* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata SetServiceInfoResp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace ServiceInfo
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_ServiceInfo_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
